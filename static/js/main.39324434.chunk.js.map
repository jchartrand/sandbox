{"version":3,"sources":["utils/fixtures.tsx","components/CopyToClipboardButton.tsx","components/Credential.tsx","utils/config.ts","components/IssueForm.tsx","utils/colors.ts","components/VerifyForm.tsx","components/VerificationCheck.tsx","components/VerificationResultsCard.tsx","components/ScrollToHash.tsx","components/HelpEntry.tsx","utils/useDocumentTitle.ts","pages/Issue.tsx","api/local.ts","pages/Verify.tsx","pages/About.tsx","pages/Privacy.tsx","pages/Terms.tsx","navigation/Dashboard/Footer.tsx","icons/DCC Logos (Public)/1x/DCC Logo-White Text on Transparent-896x278.png","navigation/NavBar/TopNavPanel.tsx","navigation/NavBar/NavTabs.tsx","utils/theme.tsx","navigation/Dashboard/index.tsx","utils/constants.ts","index.tsx"],"names":["smallList","name","document","programCertificate","courseCertificate","didDocument","didDoc","CopyToClipboardButton","value","useState","open","setOpen","Box","sx","position","zIndex","right","alignSelf","Button","onClick","navigator","clipboard","writeText","variant","mr","mt","Snackbar","onClose","autoHideDuration","message","Credential","editing","onChange","borderRadius","border","overflow","width","height","mode","wrapEnabled","showPrintMargin","alignContent","showGutter","readOnly","highlightActiveLine","CONFIG","getConfig","Object","freeze","signingKeyId","assertionMethod","id","oidcConfigUrl","process","OIDC_CONFIG_URL","signAndVerifyApiUrl","SIGN_AND_VERIFY_API_URL","provePresentationChallenge","PROVE_PRESENTATION_CHALLENGE","requestCredentialChallenge","REQUEST_CREDENTIAL_CHALLENGE","Form","styled","form","IssueForm","loading","handleSubmit","formState","setOptions","handleChange","event","target","randomDid","didSeed","didMethod","serializationType","keySuite","noValidate","autoComplete","onSubmit","Grid","container","justifyContent","xs","lg","sm","md","display","alignItems","flexDirection","Typography","mb","ml","FormControl","FormLabel","className","Tooltip","arrow","title","IconButton","color","Select","MenuItem","margin","RadioGroup","toString","FormControlLabel","control","Radio","label","TextField","disabled","COLORS","WHITE","PRIMARY","SECONDARY","INFO","ATLANTIS","METEORITE","BLUE_RIBBON","CORNFLOWER_BLUE","TROPICAL_BLUE","DAISY_BUSH","ALABASTER","WILD_SAND","div","VerificationCheck","valid","spacing","item","VerificationResultsCard","results","error","verificationSuccess","Card","boxShadow","CardContent","Alert","severity","icon","align","mx","fontWeight","fontSize","Divider","orientation","backgroundColor","AlertTitle","ScrollToTop","useLocation","pathname","hash","useEffect","el","getElementById","substr","scrollIntoView","HelpEntry","body","pageLink","length","component","Link","to","size","useDocumentTitle","prevailOnUnmount","defaultTitle","useRef","current","Issue","unsignedDocument","setDocument","signedDocument","setSignedDocument","setLoading","options","signingError","setSigningError","a","preventDefault","JSON","parse","hello","Promise","resolve","setTimeout","undefined","editorOnChange","data","setCredentialFromFile","file","reader","FileReader","addEventListener","result","readAsText","flexGrow","dropzoneText","acceptedFiles","filesLimit","files","showFileNames","showPreviewsInDropzone","fileObjects","textAlign","keys","CircularProgress","pl","stringify","endIcon","Verify","unverifiedDocument","setUnverifiedDocument","verificationResult","setVerificationResult","verifyingError","setVerifyingError","Math","random","About","map","section","Privacy","py","my","href","Terms","List","ListItem","Footer","gap","Date","getFullYear","rel","TopNavPanel","AppBar","pt","pb","Toolbar","xxs","src","logo","NavTabs","currentUrl","Tabs","centered","top","Tab","style","verticalAlign","marginRight","theme","createTheme","palette","primary","main","secondary","info","breakpoints","values","xl","Dashboard","StyledEngineProvider","injectFirst","ThemeProvider","basename","path","signedDoc","verificationRes","doc","ReactDOM","render","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.39324434.chunk.js","sourcesContent":["import programCertificate from \"../samples/programCertificate.json\";\nimport openBadge from \"../samples/openBadge.json\";\nimport openSkillsAssertion from \"../samples/openSkillsAssertion.json\";\nimport courseCertificate from \"../samples/courseCertificate.json\";\nimport credentialEngine from \"../samples/credentialEngine.json\";\nimport didDoc from \"../samples/didDoc.json\";\n\nexport const smallList = [\n  {\n    name: \"Program Certificate\",\n    document: programCertificate,\n  },\n  {\n    name: \"Course Certificate\",\n    document: courseCertificate,\n  }\n];\n\nexport const didDocument = didDoc;\n","// Button that copies to clipboard whatever string it is given as a prop\n// Based on https://codesandbox.io/s/react-copy-to-clipboard-button-with-material-ui-c8sly3?from-embed\nimport {\n\tButton,\n\tBox,\n\tSnackbar,\n } from '@mui/material'\nimport { unstable_getThemeValue } from '@mui/system'\nimport { useState } from 'react'\nimport React from 'react'\n\ntype PropsType = {\n\tvalue: string;\n};\n\nconst CopyToClipboardButton = ({value}: PropsType) => {\n\tconst [open, setOpen] = useState(false)\n\tconst handleClick = () => {\n\t\tsetOpen(true)\n\t\t// TODO: Make sure that this works on safari once site is published with https!!\n\t\tnavigator.clipboard.writeText(value)\n\t}\n\treturn (\n\t\t<Box sx={{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tzIndex: 999,\n\t\t\t\t//TODO: Reference constants in margin!!!\n\t\t\t\tright: \"8%\",\n\t\t\t\talignSelf: \"flex-end\",\n\t\t\t}}>\n\t\t\t<Button\n\t\t\t\tonClick={handleClick}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tsx={{mr: \"5px\", mt: \"3px\"}}\n\t\t\t>Copy to Clipboard</Button>\n\t\t\t<Snackbar\n\t\t\t\topen={open}\n\t\t\t\tonClose={() => setOpen(false)}\n\t\t\t\tautoHideDuration={2000}\n\t\t\t\tmessage=\"Copied to clipboard\"\n\t\t\t/>\n\t\t</Box>\n\t)\n}\nexport default CopyToClipboardButton\n","import React from 'react';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-json';\nimport CopyToClipboardButton from './CopyToClipboardButton';\n\nimport { Box } from '@mui/material';\n\ntype PropsType = {\n  value: string;\n  editing: boolean;\n  onChange?: (value: string, event?: any) => void;\n};\n\n\n// Editor window for editing, viewing credentials\nexport const Credential = ({ value, editing, onChange }: PropsType) => {\n  // Editor version\n  if (editing) {\n    return <Box\n    sx={{\n      borderRadius: \"10px\",\n      border: \"1px solid gray\",\n      overflow: \"hidden\",\n    }}>\n      <AceEditor\n        value={value}\n        onChange={onChange}\n        width=\"100%\"\n        height=\"22rem\"\n        mode=\"json\"\n        wrapEnabled={true}\n        showPrintMargin={false}\n      />\n    </Box>\n  }\n\n  // Viewer version\n  return <Box\n  sx={{\n    borderRadius: \"10px\",\n    border: \"1px solid green\",\n    overflow: \"hidden\",\n    mt: \".5rem\",\n    alignContent: \"flex-end\"\n  }}>\n    <CopyToClipboardButton value={value}/>\n    <AceEditor\n      value={value}\n      width=\"100%\"\n      showGutter={false}\n      readOnly={true}\n      wrapEnabled={true}\n      highlightActiveLine={false}\n      showPrintMargin={false}\n    />\n  </Box>\n};\n","import { didDocument } from \"./fixtures\";\n\nexport type Config = {\n  signingKeyId: string;\n  oidcConfigUrl: string;\n  signAndVerifyApiUrl: string;\n  provePresentationChallenge: string;\n  requestCredentialChallenge: string;\n}\n\nlet CONFIG: null | Config = null;\n\nexport function parseConfig(): Config {\n  return Object.freeze({\n    signingKeyId: didDocument.assertionMethod[0].id,\n    oidcConfigUrl: process.env.OIDC_CONFIG_URL ? process.env.OIDC_CONFIG_URL  : 'https://kezike-oidc-provider.herokuapp.com',\n    signAndVerifyApiUrl: process.env.SIGN_AND_VERIFY_API_URL ? process.env.SIGN_AND_VERIFY_API_URL  : 'https://kezike-sign-and-verify.herokuapp.com',\n    provePresentationChallenge: process.env.PROVE_PRESENTATION_CHALLENGE ? process.env.PROVE_PRESENTATION_CHALLENGE : 'dcc-pg-123',\n    requestCredentialChallenge: process.env.REQUEST_CREDENTIAL_CHALLENGE ? process.env.REQUEST_CREDENTIAL_CHALLENGE : 'ke12345678-0001'\n  });\n}\n\nexport function resetConfig() {\n  CONFIG = null;\n}\n\nexport function getConfig(): Config {\n  if (!CONFIG) {\n    CONFIG = parseConfig();\n  }\n  return CONFIG;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Box,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  IconButton,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Tooltip,\n  Typography,\n } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { getConfig } from '../utils/config' ;\nimport {IssueParams} from '../api/local';\nimport '../styles/main.css'\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\n// import { Link } from 'react-router-dom';\n\nconst CONFIG = getConfig();\n\ntype PropsType = {\n  handleSubmit: (event: any) => void;\n  loading: boolean;\n  formState: IssueParams;\n  setOptions: (options: IssueParams) => void;\n};\n\n\nconst Form = styled.form`\n  flex-grow: 1 1 auto;\n  flex-basis: 50%;\n  padding: 10px;\n`;\n\n\nexport const IssueForm = ({ loading, handleSubmit, formState, setOptions}: PropsType) => {\n\n  // Pass any changes to the issue parameters upwards to the parent component state\n  const handleChange = (event: any) => {\n    const { target: { name, value } } = event;\n    switch(name){\n      case \"randomDid\":\n        setOptions({...formState, randomDid: value == \"true\"});\n        break;\n      case \"didSeed\":\n        setOptions({...formState, didSeed: value});\n        break;\n      case \"didMethod\":\n        setOptions({...formState, didMethod: value});\n        break;\n      case \"serializationType\":\n        setOptions({...formState, serializationType: value});\n        break;\n      case \"keySuite\":\n        setOptions({...formState, keySuite: value});\n        break;\n    }\n  }\n\n  return (\n    // Issue Parameters Form\n    <Form\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <Grid\n        container\n        sx={{\n          justifyContent: {\n            xs: \"center\",\n            lg: \"normal\",\n          },\n        }}\n      >\n      <Box\n        sx={{\n          alignContent: \"center\",\n          width: {\n            xs: \"90%\",\n            sm: \"65%\",\n            md: \"50%\",\n            lg: \"100%\",\n          },\n        }}\n        display=\"flex\"\n        alignItems=\"flex-start\"\n        flexDirection=\"column\"\n      >\n        {/* Form Title */}\n        <Typography\n          variant=\"h2\"\n          sx={{\n            mt: \"-.3rem\",\n            mb: \"-0.3rem\",\n            ml: \"-0.2rem\",\n          }}\n        >\n          Signing Parameters\n        </Typography>\n\n        {/* Did Method Selection */}\n        <FormControl\n          sx={{width:\"100%\"}}\n        >\n          <Box display=\"flex\" sx={{alignItems: \"flex-end\"}}>\n            <FormLabel className=\"formLabel\" id=\"didmethod\">Did Method</FormLabel>\n            <Tooltip arrow title=\"Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.\">\n              <IconButton>\n                <HelpOutlineIcon color=\"info\"/>\n              </IconButton>\n            </Tooltip>\n          </Box>\n\n          <Select\n            name=\"didMethod\"\n            value={formState.didMethod}\n            onChange={handleChange}\n          >\n            <MenuItem value={\"did:key\"}>did:key</MenuItem>\n            <MenuItem value={\"null\"}>null</MenuItem>\n          </Select>\n        </FormControl>\n\n        {/* Flex container brigns text field inline w/ radio group */}\n        <Box sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"flex-end\",\n        }}>\n          {/* Radio to choose whether to autogenerate did */}\n          <FormControl margin=\"none\">\n            <Box display=\"flex\" sx={{alignItems: \"flex-end\"}}>\n              <FormLabel\n                id=\"didselection\"\n              >\n                Sign With\n              </FormLabel>\n            <Tooltip arrow title=\"Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.\">\n                <IconButton>\n                  <HelpOutlineIcon color=\"info\"/>\n                </IconButton>\n            </Tooltip>\n            </Box>\n\n            <RadioGroup\n              name=\"randomDid\"\n              onChange={handleChange}\n              value={formState.randomDid.toString()}\n            >\n              <FormControlLabel\n                value=\"true\"\n                control={<Radio />}\n                label=\"New Random DID\"\n              />\n              <FormControlLabel\n                value=\"false\"\n                control={<Radio />}\n                label=\"Existing DID\"\n              />\n            </RadioGroup>\n          </FormControl>\n\n          {/* optional did seed */}\n          <FormControl sx={{mb: \"0.5rem\"}}>\n              <TextField\n                name=\"didSeed\"\n                value={formState.didSeed}\n                id=\"standard-basic\"\n                label=\"Paste secret key seed\"\n                variant=\"standard\"\n                onChange={handleChange}\n                disabled={formState.randomDid}\n              />\n          </FormControl>\n        </Box>\n\n        {/* Key Suite Selection */}\n        <FormControl\n          sx={{width:\"100%\"}}\n        >\n          <Box display=\"flex\" sx={{alignItems: \"flex-end\"}}>\n            <FormLabel\n              className=\"formLabel\"\n              id=\"keysuite\"\n            >\n              Key Suite\n            </FormLabel>\n            <Tooltip arrow title=\"Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.\">\n              <IconButton>\n                <HelpOutlineIcon color=\"info\"/>\n              </IconButton>\n            </Tooltip>\n          </Box>\n\n          <Select\n            name=\"keySuite\"\n            value={formState.keySuite}\n            onChange={handleChange}\n          >\n            <MenuItem value={\"Ed25519Signature2020\"}>\n              Ed25519Signature2020\n            </MenuItem>\n            <MenuItem value={\"null\"}>\n              null\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        {/* Serialization Type Selection */}\n        <FormControl\n          sx={{width:\"100%\"}}\n        >\n          <Box display=\"flex\" sx={{alignItems: \"flex-end\"}}>\n            <FormLabel\n              className=\"formLabel\"\n              id=\"serializationtype\"\n            >\n              Serialization Type\n            </FormLabel>\n            <Tooltip arrow title=\"Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.\">\n              <IconButton>\n                <HelpOutlineIcon color=\"info\"/>\n              </IconButton>\n            </Tooltip>\n          </Box>\n          <Select\n            name=\"serializationType\"\n            value={formState.serializationType}\n            onChange={handleChange}\n          >\n            <MenuItem value={\"JSON-LD\"}>\n              JSON-LD\n            </MenuItem>\n            <MenuItem value={\"null\"}>\n              null\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n      </Grid>\n    </Form>\n  );\n};\n","// If you add a new color, look for its name on this site http://chir.ag/projects/name-that-color\n\n/*\nBARBERRY: \"#D9E91F\" // orig primary contrast (lime green)\nLAVENDER_PINK: \"#FAAEE0\", // orig hover highlight\nBLUE_CHALK: \"#F9DFFF\",    // orig drawer background\nMELROSE: \"#9999FF\",       // lavender drawer background\n*/ \n\nconst COLORS = {\n  WHITE: \"#FFFFFF\",\n  PRIMARY: \"#343434\", //primary color\n  SECONDARY: \"#42A5F5\", //secondary color\n  INFO: \"#424242\",\n\n  ATLANTIS: \"#99CC33\",      // yellow-green; primary contrast\n  METEORITE: \"#33207E\",     // primary purple\n  BLUE_RIBBON: \"#0066FF\",   // hover highlight \n  CORNFLOWER_BLUE: \"#8469EE\",\n  TROPICAL_BLUE: \"#B8CAF9\", // drawer background\n  DAISY_BUSH: \"#4827A7\",    // drawer highlight\n  ALABASTER: \"#f8f8f8\",\n  WILD_SAND: \"f5f5f5\",\n};\n\nexport default COLORS;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  FormGroup,\n  Select,\n  MenuItem,\n } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport COLORS from '../utils/colors';\nimport { getConfig } from '../utils/config';\n\nconst CONFIG = getConfig();\n\ntype PropsType = {\n  handleSubmit: (event: any) => void;\n  loading: boolean;\n  buttonText: string;\n  subtitleText: string;\n  initialValue: string;\n  valueChangeHandler?: (value: string) => void;\n};\n\nconst Form = styled.form`\n  flex-grow: 1 1 auto;\n  flex-basis: 50%;\n  padding: 10px;\n`;\n\nconst ContainerDidDoc = styled.div`\n  font-size: 0.3em;\n  color: ${COLORS.METEORITE};\n`;\n\n\nexport const VerifyForm = ({ loading, handleSubmit, buttonText, subtitleText, initialValue, valueChangeHandler }: PropsType) => {\n\n  const handleChange = (event: any) => {\n    const { target: { name, value } } = event;\n    if (valueChangeHandler) {\n      valueChangeHandler(value);\n    }\n  }\n\n  return (\n    <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <FormControl>\n        {/* DID selection */}\n        <FormLabel id=\"demo-radio-buttons-group-label\">Sign With:</FormLabel>\n        <RadioGroup\n          aria-labelledby=\"demo-radio-buttons-group-label\"\n          defaultValue=\"auto\"\n          name=\"radio-buttons-group\"\n        >\n          <FormControlLabel value=\"auto\" control={<Radio />} label=\"New Random DID\" />\n          <FormControlLabel value=\"manual\" control={<Radio />} label=\"Existing DID\" />\n          <TextField id=\"standard-basic\" label=\"<paste secret key seed or mnemonic>\" variant=\"standard\" />\n        </RadioGroup>\n\n        {/* Serialization Parameters */}\n        <FormGroup row={true}>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            label=\"VC Serialization\"\n            defaultValue={1}\n            onChange={handleChange}\n          >\n            <MenuItem value={1}>JSON-LD</MenuItem>\n            <MenuItem value={2}>JWT</MenuItem>\n          </Select>\n\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            label=\"Key Suite\"\n            defaultValue={1}\n            onChange={handleChange}\n          >\n            <MenuItem value={1}>Ed25519Signature2020</MenuItem>\n            <MenuItem value={2}>Jose2020</MenuItem>\n          </Select>\n        </FormGroup>\n      </FormControl>\n    </Form>\n  );\n};\n","// Component of VerificationResultsCard displaying a single verification check item\nimport {\n\tGrid,\n\tTypography,\n } from '@mui/material'\nimport React from 'react'\nimport {FC, useState} from 'react'\nimport { VerificationCheckProps } from './Props'\nimport CheckIcon from '@mui/icons-material/Check';\nimport ClearIcon from '@mui/icons-material/Clear';\n\n\nexport const VerificationCheck: FC<VerificationCheckProps> = ({\n\tvalid,\n\tmessage,\n}) => {\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tspacing={2}\n\t\t>\n\n\t\t\t{/* Display check or X */}\n\t\t\t<Grid item xs={2} sm={1.5}>\n\t\t\t\t{valid &&\n\t\t\t\t\t<CheckIcon\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tcolor:\"green\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{!valid &&\n\t\t\t\t\t<ClearIcon\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tcolor:\"red\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t\t{/* Display message */}\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={10} sm={10.5}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h4\">{message}</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import { VerificationResultsProps } from '../components/Props';\nimport {\n\tAlert,\n\tAlertTitle,\n\tBox,\n\tCard,\n\tCardContent,\n\tDivider,\n\tGrid,\n\tTypography,\n} from '@mui/material'\nimport { useState, FC } from 'react'\nimport React from 'react'\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { VerificationCheck } from './VerificationCheck';\n\n// TODO: Create props type that takes in verification results array of key value pairs\n// TODO: Format 3 sections with checks and errors, divider between first and second section\n\nexport const VerificationResultsCard: FC<VerificationResultsProps> = ({\n\tresults,\n\terror,\n}) => {\n\tvar verificationSuccess =\n\t\t!error && (\n\t\t\tresults[0].valid &&\n\t\t\tresults[1].valid &&\n\t\t\tresults[2].valid &&\n\t\t\tresults[3].valid\n\t\t);\n\n\treturn (\n\t\t<Card\n\t\t\tsx={{\n\t\t\t\tmt: \"0.25rem\",\n\t\t\t\tboxShadow: \"0px 0px 5px -1px grey\",\n\t\t\t}}\n\t\t>\n\t\t\t<CardContent>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tspacing={2}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmb:\"-8px\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{/* Overall pass/fail display on left hand side */}\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={12} md={3}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tseverity={verificationSuccess ? \"success\" : \"error\"}\n\t\t\t\t\t\t\ticon={false}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\tvariant=\"h3\"\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tmx: \"0.5rem\",\n\t\t\t\t\t\t\t\t\tfontWeight: \"800\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t{/* Overall Check or X */}\n\t\t\t\t\t\t\t\t{verificationSuccess && <CheckCircleIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tcolor: \"green\",\n\t\t\t\t\t\t\t\t\tmr: \"8px\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\t{!verificationSuccess && <CancelIcon\n\t\t\t\t\t\t\t\tfontSize=\"large\"\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\t\t\tmr: \"8px\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>}\n\n\t\t\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t\t\t{/* Overall verification message */}\n\t\t\t\t\t\t\t\t{!verificationSuccess && \"Verification Failed\"}\n\t\t\t\t\t\t\t\t{verificationSuccess && \"Verification Success\"}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={0.1}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tdisplay:{\n\t\t\t\t\t\t\t\txs:\"none\",\n\t\t\t\t\t\t\t\tmd:\"block\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Divider orientation=\"vertical\"/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t{/* More detailed verification results on right hand side */}\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={12} md={8.5}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tseverity=\"error\"\n\t\t\t\t\t\t\ticon={false}\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\theight:\"100%\",\n\t\t\t\t\t\t\t\twidth:\"100%\",\n\t\t\t\t\t\t\t\tbackgroundColor: \"white\",\n\t\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t{/* If an error is thrown display the error */}\n\t\t\t\t\t\t\t{error &&\n\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t<AlertTitle>\n\t\t\t\t\t\t\t\t\t\t<strong>{error.name}</strong>\n\t\t\t\t\t\t\t\t\t</AlertTitle>\n\t\t\t\t\t\t\t\t\t{error.message}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{/* If received verification results, display these */}\n\t\t\t\t\t\t\t{!error &&\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t{/* Display issuer level checks */}\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t<AlertTitle>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Issuer</strong>\n\t\t\t\t\t\t\t\t\t\t\t<VerificationCheck\n\t\t\t\t\t\t\t\t\t\t\t\tvalid={results[2].valid}\n\t\t\t\t\t\t\t\t\t\t\t\tmessage=\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`Issuing institution\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t${results[2].valid ? \"can\" : \"cannot\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tbe reached for verification`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</AlertTitle>\n\t\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t\t{/* Display credential level checks */}\n\t\t\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t\t\t<AlertTitle>\n\t\t\t\t\t\t\t\t\t\t\t<strong>Credential</strong>\n\t\t\t\t\t\t\t\t\t\t</AlertTitle>\n\t\t\t\t\t\t\t\t\t\t<VerificationCheck\n\t\t\t\t\t\t\t\t\t\t\tvalid={results[1].valid}\n\t\t\t\t\t\t\t\t\t\t\tmessage=\n\t\t\t\t\t\t\t\t\t\t\t\t{`Has\n\t\t\t\t\t\t\t\t\t\t\t\t\t${results[1].valid ? \"a valid\" : \"an invalid\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdigital signature`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<VerificationCheck\n\t\t\t\t\t\t\t\t\t\t\tvalid={results[0].valid}\n\t\t\t\t\t\t\t\t\t\t\tmessage=\n\t\t\t\t\t\t\t\t\t\t\t\t{`Has\n\t\t\t\t\t\t\t\t\t\t\t\t\t${results[0].valid ? \"not\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\texpired`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<VerificationCheck\n\t\t\t\t\t\t\t\t\t\t\tvalid={results[3].valid}\n\t\t\t\t\t\t\t\t\t\t\tmessage=\n\t\t\t\t\t\t\t\t\t\t\t\t{`Has\n\t\t\t\t\t\t\t\t\t\t\t\t\t${results[3].valid ? \"not\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\t\tbeen revoked by issuer`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t</Card>\n\t)\n};\n","// Element inserted at root of React DOM\n// Makes sure page is scrolled to an anchor if one is specified in hash\n// From https://stackoverflow.com/a/59128204\n\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname, hash} = useLocation();\n    useEffect(() => {\n      // Check if there is a hash and if an element with that id exists\n      const el = hash && document.getElementById(hash.substr(1))\n      if (el) {\n          el.scrollIntoView()\n      }\n  }, [pathname, hash]) // Fires every time hash changes\n\n  return null;\n}\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n} from '@mui/material';\nimport { HelpEntryProps } from './Props';\nimport {FC} from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HelpEntry: FC<HelpEntryProps> = ({\n  id,\n  title,\n  body,\n  pageLink,\n}) =>\n{\n\n  return (\n    <Box\n      sx={{\n        mt: \"1.25rem\",\n      }}\n    >\n      <Box\n        display=\"flex\"\n        sx={{\n          alignItems: \"center\",\n          mb: \"0.3rem\",\n        }}\n      >\n        <Typography\n          variant=\"h2\"\n          id={id}\n        >\n          {title}\n        </Typography>\n\n        {pageLink && pageLink.length > 0 &&\n          <Button\n            color=\"info\"\n            variant=\"contained\"\n            component={Link}\n            to={pageLink}\n            size=\"small\"\n            sx={{\n              ml: \"2rem\",\n            }}\n          >\n            Go to instance\n          </Button>\n        }\n      </Box>\n\n      <Typography variant=\"body1\">\n        {body}\n      </Typography>\n    </Box>\n  )\n}\n","// Dynamic title for pages within react router\n// From https://dev.to/luispa/how-to-add-a-dynamic-title-on-your-react-app-1l7k\nimport { useRef, useEffect } from 'react'\n\nfunction useDocumentTitle(title: string, prevailOnUnmount = false) {\n  const defaultTitle = useRef(document.title);\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => () => {\n    if (!prevailOnUnmount) {\n      document.title = defaultTitle.current;\n    }\n  }, [])\n}\n\nexport default useDocumentTitle\n","import React, { FC, useState } from 'react';\nimport { SigningProps } from '../components/Props';\nimport { signCredential } from '../api/local';\nimport { Credential, IssueForm } from '../components';\nimport {\n  Alert,\n  AlertTitle,\n  Box,\n  Button,\n  CircularProgress,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport { IssueParams } from '../api/local';\nimport SendIcon from '@mui/icons-material/Send';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Link } from 'react-router-dom'\nimport useDocumentTitle from '../utils/useDocumentTitle';\nimport {DropzoneArea, DropzoneDialog} from 'mui-file-dropzone';\nimport { EditAttributesRounded } from '@mui/icons-material';\n\n\nexport const Issue: FC<SigningProps> = ({\n  unsignedDocument,\n  setDocument,\n  signedDocument,\n  setSignedDocument,\n}) => {\n\n  // Set page title\n  // TODO: make constant?\n  useDocumentTitle('Issuer - Digital Credentials Sandbox')\n\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState<IssueParams>(\n    {\n      randomDid: true,\n      didSeed: \"\",\n      didMethod: \"did:key\",\n      serializationType: \"JSON-LD\",\n      keySuite: \"Ed25519Signature2020\",\n    }\n  );\n  const [signingError, setSigningError] = useState<Error>();\n\n  // Call local signing function on submit\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const documentJSON = JSON.parse(unsignedDocument);\n      const signedDocument = await signCredential(documentJSON, options);\n      // For some reason this delay allows the results to render before page scroll\n      await new Promise(resolve => setTimeout(resolve, 1));\n      // If no errors are thrown, store signed credential\n      setSignedDocument(signedDocument);\n      setSigningError(undefined);\n      setLoading(false);\n      // Scroll down to signed credential box\n      const element = document.getElementById(\"signedcredential\");\n      element.scrollIntoView();\n    } catch (error) {\n      // Store any errors\n      setSigningError(error);\n    } finally {\n      // Remove loading bar\n      setLoading(false);\n    }\n  };\n\n  // Update stored unsigned credential upon edit\n  const editorOnChange = async (data: string, event?: any) => {\n    setDocument(data);\n  };\n\n\n  // Load in JSON file from dropzone into the credential editor\n  const setCredentialFromFile = async (file: File) => {\n    const reader = new FileReader();\n\n    reader.addEventListener(\"load\", () => {\n      // this will then display a text file\n      if (typeof reader.result === 'string') {\n        setDocument(reader.result);\n      }\n    }, false);\n\n    if (file) {\n      reader.readAsText(file);\n    }\n  }\n\n  return (\n    <Grid\n      container\n      spacing={4}\n      justifyContent=\"center\"\n      sx={{mt: \"-.5rem\"}}\n    >\n      {/* Unsigned Credential Editor Section */}\n      <Grid item xs={12} lg={8}>\n        {/* Credential editor headers */}\n        <Box sx={{\n          display: {\n            xs: \"block\",\n            sm: \"flex\",\n          },\n          flexGrow: 1,\n          alignItems: \"baseline\",\n          mb: \".75rem\"\n        }}>\n          <Typography variant=\"h2\">\n            Unsigned Credential\n          </Typography>\n          \n\n          <Typography\n            variant=\"h3\"\n            sx={{\n              ml: {\n                xs: 0,\n                sm: \"2%\",\n              },\n              mt: {\n                xs: \"0.35rem\",\n                sm: 0,\n              },\n            }}\n          >\n            Enter your credential below\n          </Typography>\n        </Box>\n\n\n        {/* Credential Editor Box */}\n        <Credential\n          value={unsignedDocument}\n          editing={true}\n          onChange={editorOnChange}\n        />\n\n        {/* File upload section */}\n        <DropzoneArea\n          dropzoneText=\"Drag and drop a json file here or click to upload\"\n          acceptedFiles={[\".json\"]}\n          filesLimit={1}\n          onChange={(files) => setCredentialFromFile(files[0])}\n          showFileNames={true}\n          showPreviewsInDropzone={false}\n          fileObjects={[]}\n        />\n      </Grid>\n\n      {/* Signing Parameters */}\n      <Grid item xs={12} lg={4}>\n        <IssueForm\n          handleSubmit={handleSubmit}\n          loading={loading}\n          formState={options}\n          setOptions={setOptions}\n        />\n      </Grid>\n\n      {/* Error message */}\n      {signingError &&\n        <Grid item\n          xs={8}\n        >\n          <Alert\n            severity=\"error\"\n          >\n            <AlertTitle><strong>{signingError.name}</strong></AlertTitle>\n            {signingError.message}\n          </Alert>\n        </Grid>\n      }\n\n      {/* Issue Button */}\n      {!loading &&\n        <Grid item\n          xs={12}\n          sx={{textAlign: \"center\"}}\n        >\n          <Button\n            sx={{\n              width: {\n                xs:\"80%\",\n                sm:\"50%\",\n              },\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n            variant=\"contained\"\n            size=\"large\"\n            disabled={Object.keys(signedDocument).length > 0}\n            color=\"secondary\"\n          >\n            Sign Credential\n          </Button>\n        </Grid>\n      }\n\n      {/* Loading bar */}\n      {loading &&\n        <Grid item\n          xs={12}\n          sx={{textAlign: \"center\"}}\n        >\n          <CircularProgress/>\n        </Grid>\n      }\n\n      {/* Signed Credential Section */}\n      {Object.keys(signedDocument).length > 0 &&\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h2\"\n            id=\"signedcredential\"\n            sx={{\n              pl: \"0.5rem\",\n              textAlign: \"center\"}}\n          >\n            <CheckCircleIcon\n              fontSize=\"large\"\n              sx={{\n                color: \"green\",\n                mb: \"-8px\",\n                mr: \"8px\",\n              }}\n            />\n            Signed Credential\n          </Typography>\n          <Credential\n            editing={false}\n            value={signedDocument ? JSON.stringify(signedDocument, null, 2) : \"{}\"}\n          />\n        </Grid>\n      }\n\n      {/* Button to move to verify section */}\n      {Object.keys(signedDocument).length > 0 &&\n        <Grid item xs={12} sx={{textAlign: \"center\"}}>\n          <Button\n            sx={{\n              width: {\n                xs: \"80%\",\n                sm: \"40%\",\n              },\n            }}\n\n            color=\"secondary\"\n            variant=\"text\"\n            endIcon={<SendIcon/>}\n            component={Link}\n            to=\"/verify#anchor\"\n            size=\"large\"\n          >\n            Verify this Credential\n          </Button>\n        </Grid>\n      }\n    </Grid>\n  );\n};\n","export interface IssueParams {\n\trandomDid: boolean;\n\tdidSeed: string;\n\tdidMethod: string;\n\tserializationType: string;\n\tkeySuite: string;\n}\n\nexport function signCredential (unsignedCredential: object, options: IssueParams) {\n\treturn { hello: 'world' };\n}\n\nexport function verifyCredential (unVerifiedCredential: object) {\n\treturn [\n\t\t{id: \"expiration\", valid: Math.random() < 0.5},\n\t\t{id: \"valid_signature\", valid: Math.random() < 0.5},\n\t\t{id: \"issuer_did_resolves\", valid: Math.random() < 0.5},\n\t\t{id: \"revocation_status\", valid: Math.random() < 0.5},\n\t]\n}\n","import React, { FC, useState } from 'react';\nimport { VerificationProps } from '../components/Props';\nimport { verifyCredential } from '../api/local';\nimport { Credential, VerificationResultsCard } from '../components';\n// import { getConfig } from '../utils/config';\nimport { Box, Button, CircularProgress, Grid, Typography } from '@mui/material';\nimport useDocumentTitle from '../utils/useDocumentTitle';\nimport {DropzoneArea} from 'mui-file-dropzone';\n\n// const CONFIG = getConfig();\n\nexport const Verify: FC<VerificationProps> = ({\n  unverifiedDocument,\n  setUnverifiedDocument,\n  verificationResult,\n  setVerificationResult,\n}) => {\n  // Set page title\n  // TODO: make constant?\n  useDocumentTitle('Verifier - Digital Credentials Sandbox')\n\n  const [loading, setLoading] = useState(false);\n  const [verifyingError, setVerifyingError] = useState<Error>();\n\n  // On verify button\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    try {\n      setLoading(true);\n      // For some reason this delay allows the results to render before page scroll\n      await new Promise(resolve => setTimeout(resolve, 1));\n      // Attempt to convert text to JSON, apply verify function\n      const documentJSON = JSON.parse(unverifiedDocument);\n      const result = await verifyCredential(\n        documentJSON,\n      );\n      // If no errors in verifying, set results\n      setVerificationResult(result);\n      setVerifyingError(undefined);\n    } catch (error) {\n      // Store error if caught\n      setVerifyingError(error);\n    } finally {\n      // Remove loading bar\n      setLoading(false);\n      // Scroll down to verification results box\n      const element = document.getElementById(\"results\");\n      element.scrollIntoView();\n    }\n\n  };\n\n  // Update stored credential upon edit\n  const editorOnChange = async (data: string, event?: any) => {\n    setUnverifiedDocument(data);\n    setVerifyingError(undefined);\n  };\n  \n  // Load in JSON file from dropzone into the credential editor\n  const setCredentialFromFile = async (file: File) => {\n    const reader = new FileReader();\n\n    reader.addEventListener(\"load\", () => {\n      // this will then display a text file\n      if (typeof reader.result === 'string') {\n        setUnverifiedDocument(reader.result);\n      }\n    }, false);\n\n    if (file) {\n      reader.readAsText(file);\n    }\n  }\n\nreturn (\n  <Grid\n  container\n  spacing={4}\n  justifyContent=\"center\"\n  sx={{mt: \"-.5rem\"}}\n>\n  {/* Unsigned Credential Editor Section */}\n  <Grid item xs={12}>\n    <Box sx={{\n      display: {\n        xs: \"block\",\n        md: \"flex\",\n      },\n      flexGrow: 1,\n      alignItems: \"baseline\",\n      mb: \".75rem\"\n    }}>\n      <Typography\n        variant=\"h2\"\n        id=\"anchor\"\n      >\n        Unverified Credential\n      </Typography>\n\n      <Typography\n        variant=\"h3\"\n        sx={{\n          ml: {\n            xs: 0,\n            md: \"2%\",\n          },\n          mt: {\n            xs: \"0.35rem\",\n            md: 0,\n          },\n        }}\n      >\n        Enter your signed credential below\n      </Typography>\n    </Box>\n    <Credential\n      value={unverifiedDocument}\n      editing={true}\n      onChange={editorOnChange}\n    />\n\n    {/* File upload section */}\n    <DropzoneArea\n      dropzoneText=\"Drag and drop a json file here or click to upload\"\n      acceptedFiles={[\".json\"]}\n      filesLimit={1}\n      onChange={(files) => setCredentialFromFile(files[0])}\n      showFileNames={true}\n      showPreviewsInDropzone={false}\n      fileObjects={[]}\n    />\n  </Grid>\n\n\n  {/* Issue Button */}\n  {!loading &&\n    <Grid item\n      xs={12}\n      sx={{textAlign: \"center\"}}\n    >\n      <Button\n        sx={{\n          width: {\n            xs:\"80%\",\n            sm:\"50%\",\n          },\n          color: \"white\",\n        }}\n        onClick={handleSubmit}\n        variant=\"contained\"\n        size=\"large\"\n        color=\"secondary\"\n        disabled={Object.keys(verificationResult).length > 0}\n      >\n        Verify Credential\n      </Button>\n    </Grid>\n  }\n\n  {/* Loading spinner */}\n  {loading &&\n    <Grid item\n      xs={12}\n      sx={{textAlign: \"center\"}}\n    >\n      <CircularProgress/>\n    </Grid>\n  }\n\n  {/* If there are signs verification has been run, show results card */}\n  {((verificationResult.length > 0 || verifyingError) && !loading) &&\n    <Grid item xs={12} id=\"results\">\n      <VerificationResultsCard error={verifyingError} results={verificationResult}/>\n    </Grid>\n  }\n</Grid>\n);\n};\n","import React, { FC, useState } from 'react';\nimport { HelpEntry } from '../components';\nimport { getConfig } from '../utils/config';\nimport { Box, Typography,} from '@mui/material';\n// import { Link } from 'react-router-dom';\n\nconst CONFIG = getConfig();\n\nexport const About = ({}) => {\n  const helpSections = [\n    {\n      id: \"didmethod\",\n      title: \"DID method\",\n      body: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\",\n      pageLink: \"/issue#didmethod\"\n    },\n    {\n      id: \"didselection\",\n      title: \"Signing with new random DID\",\n      body: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\",\n      pageLink: \"/issue#didselection\"\n    },\n    {\n      id: \"\",\n      title: \"Signing with existing did\",\n      body: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\",\n      pageLink: \"/issue#didselection\"\n    },\n    {\n      id: \"keysuite\",\n      title: \"Key suite\",\n      body: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\",\n      pageLink: \"/issue#keysuite\"\n    },\n    {\n      id: \"serializationtype\",\n      title: \"Serialization type\",\n      body: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\",\n      pageLink: \"/issue#serializationtype\"\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n        mt: \"2.25rem\",\n      }}\n    >\n      <Typography\n        variant=\"h1\"\n        sx={{\n          mb: \".5rem\",\n        }}\n      >\n        About the Digital Credentials Sandbox\n      </Typography>\n      <Typography\n        variant=\"body1\"\n        sx={{\n          mb: \"2rem\",\n        }}\n      >\n        \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"\n      </Typography>\n\n      {helpSections.map(section => {\n        return (\n          <HelpEntry\n            id={section.id}\n            title={section.title}\n            body={section.body}\n            pageLink={section.pageLink}\n          />\n        );\n      })}\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Box, Typography,} from '@mui/material';\nimport useDocumentTitle from '../utils/useDocumentTitle';\n\nexport const Privacy = ({}) => {\n    useDocumentTitle('Privacy Policy - Digital Credentials Sandbox')\n\n    return (\n        <Box>\n          {/* DCC Developer Sandbox Privacy Policy content*/}\n              <Box>\n                <Typography\n                  variant=\"h1\"\n                  align=\"center\"\n                  sx={{py: 2}}\n                >\n                  DCC Developer Sandbox Privacy Policy\n                </Typography> \n                <Typography variant=\"h2\" sx={{my: 2}}>Introduction</Typography> \n                <Typography variant=\"body1\" sx={{my: 2}}>DCC Developer Sandbox is an open source set of verifiable credential tools developed by the <a href=\"https://digitalcredentials.mit.edu\">Digital Credentials Consortium</a>, a network of leading international universities designing an open infrastructure for academic credentials.\n                This Privacy Policy explains how DCC Developer Sandbox collects, uses, and processes personal information about our learners.</Typography> \n                <Typography variant=\"h2\" sx={{my: 2}}>What Personal Information We Collect</Typography> \n                <Typography variant=\"body1\" sx={{my: 2}}>We do not collect any personal information.</Typography> \n                <Typography variant=\"h2\" sx={{my: 2}}>Additional Information</Typography> \n                <Typography variant=\"body1\" sx={{my: 2}}>We may change this Privacy Policy from time to time. If we make any significant changes in the way we treat your personal information we will make this clear on our website or by contacting you directly. The controller for your personal information is the DCC Developer Sandbox project at MIT.</Typography> \n              </Box> {/* end of text-container */}\n        </Box>\n      );\n    }","import React from 'react';\nimport { Box, Typography, List, ListItem} from '@mui/material';\nimport useDocumentTitle from '../utils/useDocumentTitle';\n\nexport const Terms = ({}) => {\n    useDocumentTitle('Terms and Conditions - Digital Credentials Sandbox')\n\n    return (\n        <Box>\n          {/* DCC Developer Sandbox Privacy Policy content*/}\n              <Box>\n                <Typography\n                  variant=\"h1\"\n                  align=\"center\"\n                  sx={{my: 2}}\n                >\n                  TERMS AND CONDITIONS OF USE\n                </Typography> \n                <Typography variant=\"body1\">Welcome to the DCC Developer Sandbox Site (the “Site”). The Site is an open source set of verifiable credential tools developed by the Digital Credentials Consortium, a network of leading international universities designing an open infrastructure for academic credentials. By accessing this Site, users agree to be bound by the following terms and conditions which may be revised at any time. Users are encouraged to visit this page periodically to review the current terms and conditions, as your continued use of this Site signifies your agreement to these term and conditions. If you do not understand or do not agree to be bound by these terms and conditions, please exit this Site immediately.</Typography>\n                <List>\n                  <ListItem>1. The Site does not collect or retain any personally identifiable information about you.</ListItem>\n                  <ListItem>2. The text, images, trademarks, data, audio files, video files and clips, and other documentation on the Site, as well as the infrastructure used to provide the Site, (collectively the “Materials”) are protected by copyright and may be covered by other restrictions as well. DCC Developer Sandbox retains all rights, including copyright, in the Materials. Copyright and other proprietary rights may be held by individuals or entities, other than, or in addition to, DCC Developer Sandbox.</ListItem>\n                  <ListItem>3. “DCC Developer Sandbox” and its logos and seal are property of the Massachusetts Institute of Technology (MIT). Except for purposes of attribution, you may not use the DCC Developer Sandbox’s names or logos, or any variations thereof, without prior written consent of the DCC Developer Sandbox. You may not use the DCC Developer Sandbox name in any of its forms nor DCC Developer Sandbox logos for promotional purposes, or in any way that deliberately or inadvertently claims, suggests, or in the DCC Developer Sandbox’s sole judgment gives the Siteearance or impression of a relationship with or endorsement by the DCC Developer Sandbox.</ListItem>\n                  <ListItem>4. Without limiting the foregoing, all Materials on the Site are provided “AS IS” WITHOUT A WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, COPYRIGHT OWNERSHIP AND/OR NON-INFRINGEMENT OF OTHER THIRD PARTY PROPRIETARY RIGHTS. DCC Developer Sandbox does not warrant the Site will operate in an uninterrupted or error-free manner or that the Site is free of viruses or other harmful components. Use of information obtained from or through this Site is at your own risk. Your access to or download of videos, information, materials, or data through the Site or any reference sites is at your own discretion and risk and that you will be solely responsible for any damage to your property (including your computer system) or loss of data that results from the download or use of such material or data.</ListItem>\n                  <ListItem>5. NEITHER MIT, ITS AFFILIATES, TRUSTEES, DIRECTORS, OFFICERS, EMPLOYEES AND AGENTS SHALL HAVE ANY LIABIITY FOR ANY DAMAGES, INCLUDING WITHOUT LIMITATION, ANY DIRECT, INDIRECT, INCIDENTIAL, COMPENSATORY, PUNITIVE, SPECIAL OR CONSEQUENTIAL DAMAGES (EVEN IF MIT HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES) ARISING FROM OR RELATED TO THE USE OF THE WEBSITES, CONTENT, AND/OR COMPILATION.</ListItem>\n                  <ListItem>6. You agree to defend, hold harmless and indemnify MIT and its officers, agents, and employees from and against any third-party claims, actions or demands arising out of, resulting from or in any way related to your use of the Site, including any liability or expense arising from any and all claims, losses, damages (actual and consequential), suits, judgments, litigation costs and attorneys' fees, of every kind and nature.</ListItem>\n                  <ListItem>7. These terms and conditions constitute the entire agreement between you and MIT with respect to your use of the Site, superseding any prior agreements between you and MIT regarding your use of the Site. The failure of MIT to exercise or enforce any right or provision of the terms and conditions shall not constitute a waiver of such right or provision. If any provision of the terms and conditions is found by a court of competent jurisdiction to be invalid, the parties nevertheless agree that the court should endeavor to give effect to the parties' intentions as reflected in the provision, and the other provisions of the terms and conditions remain in full force and effect.</ListItem>\n                  <ListItem>8. You agree that any dispute arising out of or relating to these terms and conditions or any content posted to a Site will be governed by the laws of the Commonwealth of Massachusetts, excluding its conflicts of law provisions. You further consent to the personal jurisdiction of and exclusive venue in the federal and state courts located in and serving Boston, Massachusetts as the legal forum for any such dispute.</ListItem>\n                  <ListItem>Effective Date February 11, 2022</ListItem>\n                </List>\n              </Box> {/* end of text-container */}\n        </Box>\n      );\n    }","import React from \"react\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Divider,\n  Link,\n  Typography,\n} from \"@mui/material\";\n\nconst Footer = () => {\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      sx={{\n        flexDirection: \"column\",\n        gap: \"7px\",\n        mt: \"5px\",\n        mb: \"30px\",\n        width: {\n          md: \"70%\",\n          lg: \"50%\",\n        },\n        ml: {\n          md: \"15%\",\n          lg: \"25%\",\n        },\n      }}\n    >\n      {/* Horizontal line to break content before footer */}\n      <Divider\n        orientation=\"horizontal\"\n        sx={{\n          mb: \"20px\",\n          width: \"80%\",\n        }}\n      />\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {\"Copyright © \"}\n        {new Date().getFullYear()}\n        {\" Massachusetts Institute of Technology\"}\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://digitalcredentials.mit.edu/\"\n        >\n          Digital Credentials Consortium\n        </a>\n        {\" • \"}\n        <a\n          href=\"https://openlearning.mit.edu/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          MIT Open Learning\n        </a>\n        {\" • \"}\n        <RouterLink\n          to=\"/terms\"\n        >\n          Terms and Conditions of Use\n        </RouterLink>\n        {\" • \"}\n        <RouterLink\n          to=\"/privacy\"\n        >\n          Privacy Policy\n        </RouterLink>\n        {\" • \"}\n        <a\n          href=\"https://accessibility.mit.edu/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Accessibility\n        </a>\n        {\" • \"}\n        <a\n          href=\"https://github.com/digitalcredentials/sandbox\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          View on Github\n        </a>\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/DCC Logo-White Text on Transparent-896x278.58788bbf.png\";","import React from \"react\";\nimport logo from \"../../icons/DCC Logos (Public)/1x/DCC Logo-White Text on Transparent-896x278.png\";\n\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\n\n// Header bar\nconst TopNavPanel = () => {\n  return (\n    <AppBar\n      position=\"static\"\n      sx={{\n        pt: \"-30px\",\n        pb: \"0rem\",\n      }}\n    >\n      <Toolbar>\n      \n      {/* DCC Icon, white on transparent */}\n      <a\n        href=\"https://digitalcredentials.mit.edu/\"\n        target=\"_blank\"\n      >\n        <Box\n          component=\"img\"\n          sx={{\n            height: {\n              xs: \"30px\",\n              sm: \"30px\",\n              md: \"45px\",\n            },\n            display: {\n              xxs: \"none\",\n              sm: \"block\",\n            },\n          }} \n          src={logo}\n        />\n      </a>\n\n      {/* Site title */}\n      <Typography\n        variant=\"h1\"\n        component=\"div\"\n        align=\"center\"\n        sx={{\n          flexGrow: 1,\n          mr: {\n            xs: \"0\",\n            sm: \"7%\",\n          },\n        }}\n      >\n        Developer Sandbox\n      </Typography>\n      \n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopNavPanel;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport Tab from \"@mui/material/Tab\";\nimport Tabs from \"@mui/material/Tabs\";\n\nimport HistoryEduIcon from '@mui/icons-material/HistoryEdu';\nimport HelpIcon from '@mui/icons-material/Help';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\n\nconst NavTabs = () => {\n  const currentUrl = useLocation().pathname;\n\n  return (\n    <Tabs\n      variant=\"fullWidth\"\n      value={currentUrl}\n      centered\n      //TODO: increase font size of labels\n      //TODO: reference constants for sizes!!!\n      sx={{\n        position: \"sticky\",\n        top: \"0px\",\n        backgroundColor: \"white\",\n        zIndex: 9999,\n        boxShadow: \"0px 5px 10px -10px black\",\n        pt: \"5px\",\n      }}\n    >\n      <Tab\n        label={<div>\n            <HistoryEduIcon\n            style = {{\n              verticalAlign : 'middle',\n              marginRight: \"15px\",\n            }}/>\n            Issue\n          </div>}\n        value=\"/\"\n        component={Link}\n        to=\"/\"\n        key={0}\n      />\n      <Tab\n        label={<div>\n              <PublishedWithChangesIcon\n              style = {{\n                verticalAlign : 'middle',\n                marginRight: \"15px\",\n              }}/>\n              Verify\n            </div>}\n        value=\"/verify\"\n        component={Link}\n        to=\"/verify\"\n        key={1}\n      />\n      {/* <Tab\n        label=\"About\"\n        value=\"/about\"\n        component={Link}\n        to=\"/about\"\n        key={2}\n        icon={<HelpIcon fontSize=\"large\"/>}\n      /> */}\n    </Tabs>\n  );\n};\n\nexport default NavTabs;\n","import { createTheme } from '@mui/material/styles';\nimport COLORS from \"./colors\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: COLORS.PRIMARY,\n    },\n    secondary: {\n      main: COLORS.SECONDARY,\n    },\n    info: {\n      main: COLORS.INFO,\n    }\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 768,\n      lg: 900,\n      xl: 1200,\n    },\n  },\n});\n\nexport default theme;","import React, { useState } from \"react\";\nimport {Box, ThemeProvider} from \"@mui/material\";\nimport { smallList } from \"../../utils/fixtures\";\nimport { NavBar } from \"../NavBar\";\nimport { Issue, Verify, About, Privacy, Terms } from \"../../pages\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { NAV_SIZE } from \"../../utils/constants\";\nimport Footer from \"./Footer\";\nimport { StyledEngineProvider } from '@mui/material/styles';\nimport TopNavPanel from \"../NavBar/TopNavPanel\";\nimport NavTabs from \"../NavBar/NavTabs\";\nimport { VerificationResultsProps } from \"../../components/Props\";\n\nimport theme from \"../../utils/theme\";\nimport ScrollToHash from \"../../components/ScrollToHash\";\n\n\n\nconst Container = styled.div`\n  //TODO: Improve constants reference!!!\n  margin: calc(${NAV_SIZE.TOP_NAV_HEIGHT} + 15px) 8% 0\n    calc( 8%);\n`;\n\nexport const Dashboard = () => {\n  const [document, setDocument] = useState(JSON.stringify(smallList[0].document, null, 2));\n  const [signedDocument, setSignedDocument] = useState({});\n  const [unverifiedDocument, setUnverifiedDocument] = useState(\"\");\n  const [verificationResult, setVerificationResult] = useState([]);\n  const [demoCredential, setDemoCredential] = useState({});\n  const [subjectDid, setSubjectDid] = useState('did:example:1234');\n\n  const doSetDocument = (doc: string) => {\n    setDocument(doc);\n    setSignedDocument({});\n  };\n\n  const doSetSignedDocument = (signedDoc: any) => {\n    setSignedDocument(signedDoc);\n    setUnverifiedDocument(JSON.stringify(signedDoc, null, 2));\n    setVerificationResult([]);\n  };\n\n  const doSetUnverifiedDocument = (signedDoc: string) => {\n    setUnverifiedDocument(signedDoc);\n    setVerificationResult([]);\n  }\n\n  //TODO: make stricter typing for verification results\n  const doSetVerificationResult = (verificationRes: any) => {\n    setVerificationResult(verificationRes);\n  };\n\n  const doSetDemoCredential = (demoCredential: any) => {\n    setDemoCredential(demoCredential);\n  };\n\n  const doSetSubjectDid = (subjectDid: any) => {\n    setSubjectDid(subjectDid);\n  };\n\n  return (\n    <StyledEngineProvider injectFirst>\n    <ThemeProvider theme={theme}>\n    <Box>\n      <Router basename=\"/sandbox\">\n        <ScrollToHash/>\n        <TopNavPanel/>\n        <NavTabs/>\n        <Box\n          sx={{\n            //TODO: change these margins to a const reference!!!\n            mt: {\n              xs:\"-10px\",\n              sm:\"15px\",\n            },\n            mx: \"6%\",\n          }}\n        >\n        <Switch>\n          <Route path=\"/verify\">\n            <Verify\n              unverifiedDocument={unverifiedDocument}\n              setUnverifiedDocument={doSetUnverifiedDocument}\n              verificationResult={verificationResult}\n              setVerificationResult={doSetVerificationResult}\n            />\n          </Route>\n          <Route path=\"/about\">\n            <About\n            />\n          </Route>\n          <Route path=\"/privacy\">\n            <Privacy />\n          </Route>\n          <Route path=\"/terms\">\n            <Terms />\n          </Route>\n          <Route path=\"/\">\n            <Issue\n              unsignedDocument={document}\n              setDocument={doSetDocument}\n              signedDocument={signedDocument}\n              setSignedDocument={doSetSignedDocument}\n            />\n          </Route>\n        </Switch>\n        <Box pt={4}>\n          <Footer />\n        </Box>\n        </Box>\n      </Router>\n    </Box>\n    </ThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n","export const NAV_SIZE = { TOP_NAV_HEIGHT: \"90px\", SIDE_NAV_WIGHT: \"140px\" };\n\nexport const TOP_NAV_PANEL_ICONS = [\"icon-notification\", \"icon-question\"];\n\nexport const NAV_SIDEBAR_ICONS = [\n  { icon: \"icon-command\", link: \"/\", label: \"Issue\", },\n  { icon: \"icon-correct\", link: \"/verify\", label: \"Verify\", },\n  { icon: \"icon-qr-code\", link: \"/about\", label: \"About\", },\n];\n","import \"./styles/main.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Dashboard } from \"./navigation\";\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <Dashboard />\n  </>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}